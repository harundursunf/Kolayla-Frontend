import React, { useState, useEffect, useMemo } from "react";
import axios from "axios";
import dersResmi from "../../images/ders9.png";

export default function AytMatematikKonular() {
Â  const [topics, setTopics] = useState([]);
Â  const [completedTopics, setCompletedTopics] = useState([]);
Â  const [favoriteTopics, setFavoriteTopics] = useState([]);
Â  const [loading, setLoading] = useState(true);
Â  const [userId, setUserId] = useState(null);


Â  useEffect(() => {
Â  Â  const token = localStorage.getItem("token"); 

Â  Â  if (token) {
Â  Â  Â  try {

Â  Â  Â  Â  const base64Url = token.split('.')[1];
Â  Â  Â  Â  const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');


Â  Â  Â  Â  const payload = JSON.parse(atob(base64));


Â  Â  Â  Â  const id = payload["http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier"];
Â  Â  Â  Â  setUserId(parseInt(id)); // id string olabilir, sayÄ±ya Ã§evir
Â  Â  Â  } catch (err) {
Â  Â  Â  Â  console.error("JWT Ã§Ã¶zÃ¼mleme hatasÄ±:", err);
Â  Â  Â  }
Â  Â  } else {
Â  Â  Â  console.warn("JWT bulunamadÄ±.");
Â  Â  }
Â  }, []);



Â  useEffect(() => {
Â  Â  const fetchTopics = async () => {
Â  Â  Â  if (!userId) return;

Â  Â  Â  try {
Â  
Â  Â  Â  Â  const topicResponse = await axios.get("https://localhost:5001/api/Topic");
Â  Â  Â  Â  const allTopics = topicResponse.data;

Â 
Â  Â  Â  Â  const aytMatematikTopics = allTopics.filter(
Â  Â  Â  Â  Â  (topic) => topic.lessonType === "AYT" && topic.category === "Matematik"
Â  Â  Â  Â  );

Â  Â  Â  Â  setTopics(aytMatematikTopics); 

Â  Â 
Â  Â  Â  Â  const completedResponse = await axios.get(
Â  Â  Â  Â  Â  `https://localhost:5001/api/CompletedTopic/getbyuser/${userId}`
Â  Â  Â  Â  );
Â  Â  
Â  Â  Â  Â  const completedTopicIds = completedResponse.data.map((item) => item.topicId);
Â  Â  Â  Â  setCompletedTopics(completedTopicIds); 

Â  Â 
Â  Â  Â  Â  const favoriteResponse = await axios.get(
Â  Â  Â  Â  Â  `https://localhost:5001/api/FavoriteTopic/getbyuser/${userId}`
Â  Â  Â  Â  );
Â  Â  Â  
Â  Â  Â  Â  const favoriteTopicIds = favoriteResponse.data.map((item) => item.topicId);
Â  Â  Â  Â  setFavoriteTopics(favoriteTopicIds); 

Â  Â  Â  } catch (error) {
Â  Â  Â  Â  console.error("Veri Ã§ekme hatasÄ±:", error);
Â  Â  Â  } finally {
Â  Â  Â  Â  setLoading(false);
Â  Â  Â  }
Â  Â  };

Â  Â  fetchTopics();
Â  }, [userId]); 

Â  const progress = useMemo(() => {

Â  Â  const completedCountForThisPage = topics.filter(topic =>
Â  Â  Â  completedTopics.includes(topic.id)
Â  Â  ).length;

Â  Â  return topics.length === 0
Â  Â  Â  ? 0
Â  Â  Â  : Math.round((completedCountForThisPage / topics.length) * 100);
Â  }, [completedTopics, topics]); 




const toggleTopicCompletion = async (topicId) => {
Â  const isCompleted = completedTopics.includes(topicId);

Â  if (isCompleted) {

Â  Â  setCompletedTopics((prev) => prev.filter((id) => id !== topicId));

Â  Â  try {
Â  Â 
Â  Â  Â  const response = await axios.get(
Â  Â  Â  Â  `https://localhost:5001/api/CompletedTopic/getbyuserandtopic?userId=${userId}&topicId=${topicId}`
Â  Â  Â  );

Â  Â  Â  if (response.data?.id) {
Â  Â  Â  Â  // API'den sil
Â  Â  Â  Â  await axios.delete(
Â  Â  Â  Â  Â  `https://localhost:5001/api/CompletedTopic/delete/${response.data.id}`
Â  Â  Â  Â  );
Â  Â  Â  Â  console.log(`Konu ${topicId} tamamlananlardan silindi.`);
Â  Â  Â  }
Â  Â  } catch (error) {
Â  Â  Â  console.error(`Konu tamamlama durumu silinirken hata oluÅŸtu (Topic ID: ${topicId}):`, error);
Â  
Â  Â 
Â  Â  }
Â  } else {
Â  
Â  Â  setCompletedTopics((prev) => [...prev, topicId]);

Â  Â  try {

Â  Â  Â  await axios.post("https://localhost:5001/api/CompletedTopic/add", {
Â  Â  Â  Â  userId,
Â  Â  Â  Â  topicId,
Â  Â  Â  Â  completedDate: new Date().toISOString(),
Â  Â  Â  });
Â  Â  Â  console.log(`Konu ${topicId} tamamlandÄ± olarak iÅŸaretlendi.`);
Â  Â  } catch (error) {
Â  Â  Â  console.error(`Konu tamamlama durumu eklenirken hata oluÅŸtu (Topic ID: ${topicId}):`, error);
Â  Â  }
Â  }
};

const toggleFavorite = async (topicId) => {
Â  const isFavorite = favoriteTopics.includes(topicId);

Â  if (isFavorite) {
Â  Â  setFavoriteTopics((prev) => prev.filter((id) => id !== topicId));

Â  Â  try {
        
        const response = await axios.get(
            `https://localhost:5001/api/FavoriteTopic/getbyuserandtopic?userId=${userId}&topicId=${topicId}`
        );

        if(response.data?.id) {
             await axios.delete(`https://localhost:5001/api/FavoriteTopic/delete/${response.data.id}`);
             console.log(`Konu ${topicId} favorilerden silindi.`);
        } else {
             // EÄŸer kaydÄ± bulamazsak, belki de zaten yoktur veya API farklÄ± Ã§alÄ±ÅŸÄ±yordur
             console.warn(`Favori kayÄ±t bulunamadÄ± veya silinemedi (Topic ID: ${topicId}).`);
        }

Â  Â  } catch (error) {
Â  Â  Â  console.error(`Favori durumu silinirken hata oluÅŸtu (Topic ID: ${topicId}):`, error);
Â  Â  Â  // Hata durumunda UI'Ä± geri alabilirsiniz
Â  Â  Â  // setFavoriteTopics((prev) => [...prev, topicId]);
Â  Â  }
Â  } else {
Â  Â  // UI'Ä± hemen gÃ¼ncelle (favorilere ekle)
Â  Â  setFavoriteTopics((prev) => [...prev, topicId]);

Â  Â  try {
Â  Â  Â  // API'ye ekle
Â  Â  Â  await axios.post("https://localhost:5001/api/FavoriteTopic/add", {
Â  Â  Â  Â  userId,
Â  Â  Â  Â  topicId,
Â  Â  Â  });
Â  Â  Â  console.log(`Konu ${topicId} favorilere eklendi.`);
Â  Â  } catch (error) {
Â  Â  Â  console.error(`Favori durumu eklenirken hata oluÅŸtu (Topic ID: ${topicId}):`, error);
Â  Â  Â  // Hata durumunda UI'Ä± geri alabilirsiniz
Â  Â  Â  // setFavoriteTopics((prev) => prev.filter((id) => id !== topicId));
Â  Â  }
Â  }
};


Â  if (loading || userId === null) {
Â  Â  return (
Â  Â  Â  <div className="mt-32 text-center text-xl text-purple-600 font-semibold">
Â  Â  Â  Â  YÃ¼kleniyor...
Â  Â  Â  </div>
Â  Â  );
Â  }

Â  return (
Â  Â  <div className="mt-[100px] px-6 py-10 bg-white rounded-3xl shadow-2xl w-full max-w-6xl mx-auto flex flex-col items-center space-y-20">
Â  Â  Â  <div className="w-full flex flex-col md:flex-row justify-between items-center relative">
Â  Â  Â  Â  <div className="relative w-60 h-60 flex items-center justify-center">
Â  Â  Â  Â  Â  <div
Â  Â  Â  Â  Â  Â  className="w-52 h-52 rounded-full flex items-center justify-center font-bold text-4xl shadow-lg relative bg-white"
Â  Â  Â  Â  Â  Â  style={{
Â  Â  Â  Â  Â  Â  Â  background: `conic-gradient(#a855f7 ${progress}%, #e5e7eb ${progress}%)`,
Â  Â  Â  Â  Â  Â  }}
Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  <span className="z-10 text-purple-700">{progress}%</span>
Â  Â  Â  Â  Â  Â  <div className="absolute inset-4 rounded-full bg-white"></div>
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  </div>

Â  Â  Â  Â  <div className="flex flex-col items-center space-y-4 text-center mt-8 md:mt-0">
Â  Â  Â  Â  Â  <h2 className="text-5xl font-extrabold bg-gradient-to-r from-green-600 to-yellow-600 text-transparent bg-clip-text">
Â  Â  Â  Â  Â  Â  AYT Matematik Konu Takibi
Â  Â  Â  Â  Â  </h2>
Â  Â  Â  Â  Â  <p className="text-md md:text-lg text-gray-700 max-w-xl mx-auto bg-purple-50 p-4 rounded-xl border border-purple-200 shadow-inner">
Â  Â  Â  Â  Â  Â  ðŸ“š Ä°lerlemeni adÄ±m adÄ±m takip et! DÃ¼zenli Ã§alÄ±ÅŸ, hedeflerine ulaÅŸ.
Â  Â  Â  Â  Â  </p>
Â  Â  Â  Â  </div>

Â  Â  Â  Â  <div className="relative w-40 h-40 md:w-48 md:h-48 rounded-full bg-white shadow-2xl flex items-center justify-center overflow-hidden mt-8 md:mt-0">
Â  Â  Â  Â  Â  <img src={dersResmi} alt="Ders Ã‡alÄ±ÅŸan Ã‡ocuk" className="w-full h-full object-cover" />
Â  Â  Â  Â  </div>
Â  Â  Â  </div>

Â  Â  Â  <div className="w-full flex flex-col gap-10">
Â  Â  Â  Â  <div className="bg-purple-50 p-6 rounded-2xl shadow-md hover:shadow-lg transition-all duration-300">
Â  Â  Â  Â  Â  <h3 className="text-2xl font-semibold text-purple-700 mb-6">Matematik</h3>
Â  Â  Â  Â  Â  <ul className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6">
Â  Â  Â  Â  Â  Â  {topics.map((topic) => (
Â  Â  Â  Â  Â  Â  Â  <li
Â  Â  Â  Â  Â  Â  Â  Â  key={topic.id}
Â  Â  Â  Â  Â  Â  Â  Â  className="flex items-center justify-between bg-white p-4 rounded-xl shadow hover:shadow-md hover:bg-purple-100 transition-all duration-300"
Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  <div className="flex items-center gap-4">
Â  Â  Â  Â  Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  type="checkbox"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  checked={completedTopics.includes(topic.id)}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  onChange={() => toggleTopicCompletion(topic.id)}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className="w-5 h-5 accent-purple-500 cursor-pointer"
Â  Â  Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  Â  Â  <span
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className={`text-base font-medium ${completedTopics.includes(topic.id)
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  ? "line-through text-purple-400"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  : "text-purple-700"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  }`}
Â  Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {topic.name}
Â  Â  Â  Â  Â  Â  Â  Â  Â  </span>
Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  
Â  Â  Â  Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  onClick={() => toggleFavorite(topic.id)}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className={`text-lg transition-colors duration-200 ${favoriteTopics.includes(topic.id)
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  ? "text-yellow-500 hover:text-yellow-600"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  : "text-gray-400 hover:text-gray-500"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  }`}
Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  
Â  Â  Â  Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â  Â  Â  </li>
Â  Â  Â  Â  Â  Â  ))}
Â  Â  Â  Â  Â  </ul>
Â  Â  Â  Â  </div>
Â  Â  Â  </div>
Â  Â  </div>
Â  );
}